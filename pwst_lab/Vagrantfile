# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  # Provision Kali box
  config.vm.define "kali" do |kali|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    kali.vm.box = "kalilinux/rolling"

    # Set hostname
    kali.vm.hostname = "pwst-kali"

    # Upload the provisioner script to the guest machine
    kali.vm.provision "file", 
      source: "provisioner/kali.sh", 
      destination: "/tmp/provisioner.sh"

    # Execute the provisioner script
    kali.vm.provision "shell",
      inline: "sudo /bin/bash /tmp/provisioner.sh"

    # Reboot the box after provisioning
    kali.vm.provision :reload

    kali.vm.provider "vmware_desktop" do |v|
      # Display the VMware GUI when booting the machine
      v.gui = true

      # Set to stop error message from displaying
      v.allowlist_verified = true

      # Customize the amount of memory on the VM:
      v.vmx["memsize"] = "4096"

      # Customize the number of CPUs
      v.vmx["numvcpus"] = "2"

      # Set provider name
      v.vmx["displayName"] = "pwst-kali"
    end
  end

  # Provision Ubuntu-Server
  config.vm.define "ubuntu" do |ubuntu|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    ubuntu.vm.box = "bento/ubuntu-22.04"

    # Set hostname
    ubuntu.vm.hostname = "pwst-ubuntu"

    # Upload the provisioner script to the guest machine
    ubuntu.vm.provision "file", 
      source: "provisioner/ubuntu.sh", 
      destination: "/tmp/provisioner.sh"

    # Execute the provisioner script
    ubuntu.vm.provision "shell",
      inline: "sudo /bin/bash /tmp/provisioner.sh"

    # Reboot the box after provisioning
    ubuntu.vm.provision :reload

    ubuntu.vm.provider "vmware_desktop" do |v|
      # Display the VMware GUI when booting the machine
      v.gui = true

      # Set to stop error message from displaying
      v.allowlist_verified = true

      # Customize the amount of memory on the VM:
      v.vmx["memsize"] = "4096"

      # Customize the number of CPUs
      v.vmx["numvcpus"] = "2"

      # Set provider name
      v.vmx["displayName"] = "pwst-ubuntu"
    end
  end
end
